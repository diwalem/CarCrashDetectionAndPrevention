/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CustomerServiceRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.EnterpriseDirectory;
import Business.Network.Network;
import Business.Organization.CustomerServiceOrganization;
import Business.Organization.HospitalHelpDeskOrganization;
import Business.Organization.Organization;
import Business.Organization.PoliceFrontDeskOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.HospitalToCustomerServiceWorkRequest;
import Business.WorkQueue.PoliceToCustomerServiceWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author Mrunalini
 */
public class CustomerServiceWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    private CustomerServiceOrganization customerServiceOrganization;
    private Enterprise enterprise;
    

    private EnterpriseDirectory enterpriseDirectory;

    /**
     * Creates new form CustomerServiceWorkAreaJPanel
     */
    public CustomerServiceWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, Organization customerServiceOrganization, EcoSystem business, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.business = business;
        this.customerServiceOrganization = (CustomerServiceOrganization) customerServiceOrganization;
        this.enterprise = enterprise;

        valueLabel.setText(enterprise.getName());

        populateTable();

    }

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();

        model.setRowCount(0);
        for (WorkRequest request : customerServiceOrganization.getWorkQueue().getWorkRequestList()) {
            if (request instanceof HospitalToCustomerServiceWorkRequest) {
                System.out.print("");
            } else if (request instanceof PoliceToCustomerServiceWorkRequest) {
                System.out.print("");
            } else {

                Object[] row = new Object[6];
                row[0] = request;
                row[1] = request.getPriority();
                row[2] = request.getSender();
                row[3] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
                row[4] = request.getStatus();
                row[5] = request.getRequestDate();
                model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        btnViewDetails = new javax.swing.JButton();
        btnSendToHospital = new javax.swing.JButton();
        btnSendToPolice = new javax.swing.JButton();
        assignJButton = new javax.swing.JButton();
        btnViewPoliceReport = new javax.swing.JButton();
        btnDoctorReport = new javax.swing.JButton();
        refreshJButton = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        enterpriseLabel = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 204, 153));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Location", "Priority Level", "Sender", "Receiver", "Status", "Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 70, 651, 234));

        btnViewDetails.setText("View Details");
        btnViewDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDetailsActionPerformed(evt);
            }
        });
        add(btnViewDetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 380, 125, -1));

        btnSendToHospital.setText("Send to Hospital");
        btnSendToHospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendToHospitalActionPerformed(evt);
            }
        });
        add(btnSendToHospital, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 330, 159, -1));

        btnSendToPolice.setText("Send to Police");
        btnSendToPolice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendToPoliceActionPerformed(evt);
            }
        });
        add(btnSendToPolice, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 380, 159, -1));

        assignJButton.setText("Assign to me");
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });
        add(assignJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 330, 125, -1));

        btnViewPoliceReport.setText("View Police Report");
        btnViewPoliceReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewPoliceReportActionPerformed(evt);
            }
        });
        add(btnViewPoliceReport, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 430, 125, -1));

        btnDoctorReport.setText("View Doctor Report");
        btnDoctorReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoctorReportActionPerformed(evt);
            }
        });
        add(btnDoctorReport, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 480, -1, -1));

        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });
        add(refreshJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 20, -1, -1));

        jButton3.setText("Analysis");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 430, 160, -1));

        enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel.setText("EnterPrise :");
        add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 20, 127, 30));

        valueLabel.setText("<value>");
        add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 20, 158, 26));
    }// </editor-fold>//GEN-END:initComponents

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed

        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        

        WorkRequest request = (WorkRequest) workRequestJTable.getValueAt(selectedRow, 0);
        request.setReceiver(userAccount);
        request.setStatus("Processing");
        populateTable();
        JOptionPane.showMessageDialog(null, "You are now handling this case.", "Message To You.", JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_assignJButtonActionPerformed

    private void btnViewDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDetailsActionPerformed
        // TODO add your handling code here:
        int row = workRequestJTable.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        WorkRequest request = (WorkRequest) workRequestJTable.getValueAt(row, 0);

        UserAccount userAcc = request.getSender();

        ViewCustomerDetailsJPanel viewCustomerDetailsJPanel = new ViewCustomerDetailsJPanel(userProcessContainer, userAcc);
        userProcessContainer.add("viewCustomerDetailsJPanel", viewCustomerDetailsJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnViewDetailsActionPerformed

    private void btnSendToHospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendToHospitalActionPerformed

        int row = workRequestJTable.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        WorkRequest request = (WorkRequest) workRequestJTable.getValueAt(row, 0);
        if (request.getStatus().equals("Received")) {
            JOptionPane.showMessageDialog(null, "Please assign the request to yourself before sending to the hospital.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            WorkRequest request1 = new WorkRequest();
            request1.setLocation(request.getLocation());
            request1.setSender(userAccount);
            request1.setStatus("Received");
            request1.setPatientName(request.getSender());
            request1.setPriority(request.getPriority());

            Organization org = null;

            for (Network network : business.getNetworkList()) {

                for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                    if (enterprise.getLocation().equals(request.getLocation())) {
                        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                            if (organization instanceof HospitalHelpDeskOrganization) {
                                org = organization;
                                break;
                            }
                        }

                    }
                }
            }
            if (org != null) {
                org.getWorkQueue().getWorkRequestList().add(request1);
                userAccount.getWorkQueue().getWorkRequestList().add(request1);
            }
            JOptionPane.showMessageDialog(null, "This case has been forwarded to a hospital in that location.", "Information", JOptionPane.INFORMATION_MESSAGE);

        }
    }//GEN-LAST:event_btnSendToHospitalActionPerformed

    private void btnSendToPoliceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendToPoliceActionPerformed
        // TODO add your handling code here:
        int row = workRequestJTable.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        WorkRequest request = (WorkRequest) workRequestJTable.getValueAt(row, 0);
        if (request.getStatus().equals("Received")) {

            JOptionPane.showMessageDialog(null, "Please assign the request to yourself before sending to the police.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            request.setStatus("Processed");
            WorkRequest request3 = new WorkRequest();
            request3.setLocation(request.getLocation());
            request3.setSender(userAccount);
            request3.setStatus("Received");
            request3.setPatientName(request.getSender());
            request3.setPriority(request.getPriority());

            Organization org = null;

            for (Network network : business.getNetworkList()) {

                for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                    if (enterprise.getLocation().equals(request.getLocation())) {
                        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                            if (organization instanceof PoliceFrontDeskOrganization) {
                                org = organization;
                                break;
                            }
                        }

                    }
                }
            }
            if (org != null) {
                org.getWorkQueue().getWorkRequestList().add(request3);
                userAccount.getWorkQueue().getWorkRequestList().add(request3);
            }
            JOptionPane.showMessageDialog(null, "This case has been forwarded to the police in that location. ", "Information", JOptionPane.INFORMATION_MESSAGE);

        }
    }//GEN-LAST:event_btnSendToPoliceActionPerformed

    private void btnDoctorReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoctorReportActionPerformed
        // TODO add your handling code here:
        int row = workRequestJTable.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        WorkRequest request = (WorkRequest) workRequestJTable.getValueAt(row, 0);

        UserAccount userAcc = request.getSender();

        ViewDoctorReportJPanel viewDoctorReportJPanel = new ViewDoctorReportJPanel(userProcessContainer, userAcc, customerServiceOrganization, business, enterprise);
        userProcessContainer.add("viewDoctorReportJPanel", viewDoctorReportJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

    }//GEN-LAST:event_btnDoctorReportActionPerformed

    private void btnViewPoliceReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewPoliceReportActionPerformed
        // TODO add your handling code here:
        int row = workRequestJTable.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        WorkRequest request = (WorkRequest) workRequestJTable.getValueAt(row, 0);

        UserAccount userAcc = request.getSender();

        ViewPoliceReportJPanel viewPoliceReportJPanel = new ViewPoliceReportJPanel(userProcessContainer, userAcc, customerServiceOrganization, business, enterprise);
        userProcessContainer.add("viewPoliceReportJPanel", viewPoliceReportJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnViewPoliceReportActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        populateTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        AnalysisJPanel analysisJPanel = new AnalysisJPanel(userProcessContainer, customerServiceOrganization);
        userProcessContainer.add("analysisJPanel", analysisJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_jButton3ActionPerformed
        

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignJButton;
    private javax.swing.JButton btnDoctorReport;
    private javax.swing.JButton btnSendToHospital;
    private javax.swing.JButton btnSendToPolice;
    private javax.swing.JButton btnViewDetails;
    private javax.swing.JButton btnViewPoliceReport;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JButton jButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JLabel valueLabel;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
